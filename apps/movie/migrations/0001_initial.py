# Generated by Django 4.2.16 on 2025-05-26 02:45

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='GenreModel',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='MovieModel',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('korean_title', models.CharField(max_length=255)),
                ('original_title', models.CharField(blank=True, max_length=255, null=True)),
                ('plot', models.TextField(blank=True, null=True)),
                ('release_date', models.DateField(blank=True, null=True)),
                ('runtime_minutes', models.IntegerField(blank=True, null=True)),
                ('poster_image_url', models.URLField(blank=True, max_length=1024, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': '영화',
                'verbose_name_plural': '영화 목록',
                'db_table': 'movies',
            },
        ),
        migrations.CreateModel(
            name='OTTPlatformModel',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('logo_image_url', models.URLField(blank=True, max_length=1024, null=True)),
            ],
            options={
                'verbose_name': 'OTT 플랫폼',
                'verbose_name_plural': 'OTT 플랫폼 목록',
                'db_table': 'ott_platforms',
            },
        ),
        migrations.CreateModel(
            name='PersonModel',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('external_id', models.CharField(blank=True, max_length=100, null=True, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='TrailerModel',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('url', models.URLField(max_length=1024)),
                ('trailer_type', models.CharField(blank=True, max_length=50, null=True)),
                ('site_name', models.CharField(blank=True, max_length=50, null=True)),
                ('thumbnail_url', models.URLField(blank=True, max_length=1024, null=True)),
                ('movie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='trailers', to='movie.moviemodel')),
            ],
            options={
                'verbose_name': '영화 예고편',
                'verbose_name_plural': '영화 예고편 목록',
                'db_table': 'movie_trailers',
            },
        ),
        migrations.CreateModel(
            name='StillCutModel',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('image_url', models.URLField(max_length=1024)),
                ('caption', models.CharField(blank=True, max_length=255, null=True)),
                ('display_order', models.IntegerField(default=0)),
                ('movie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='still_cuts', to='movie.moviemodel')),
            ],
            options={
                'verbose_name': '영화 스틸컷',
                'verbose_name_plural': '영화 스틸컷 목록',
                'db_table': 'movie_still_cuts',
                'ordering': ['display_order'],
            },
        ),
        migrations.AddField(
            model_name='moviemodel',
            name='directors',
            field=models.ManyToManyField(related_name='directed_movies', to='movie.personmodel'),
        ),
        migrations.AddField(
            model_name='moviemodel',
            name='genres',
            field=models.ManyToManyField(related_name='movies', to='movie.genremodel'),
        ),
        migrations.CreateModel(
            name='MoviePlatformRatingModel',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('platform_name', models.CharField(max_length=100)),
                ('score', models.FloatField()),
                ('movie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='platform_ratings', to='movie.moviemodel')),
            ],
            options={
                'verbose_name': '플랫폼별 영화 평점',
                'verbose_name_plural': '플랫폼별 영화 평점 목록',
                'db_table': 'movie_platform_ratings',
                'unique_together': {('movie', 'platform_name')},
            },
        ),
        migrations.CreateModel(
            name='MovieOTTAvailabilityModel',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('watch_url', models.URLField(blank=True, max_length=1024, null=True)),
                ('availability_note', models.CharField(blank=True, max_length=100, null=True)),
                ('movie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ott_availability', to='movie.moviemodel')),
                ('platform', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='available_movies', to='movie.ottplatformmodel')),
            ],
            options={
                'verbose_name': '영화 OTT 시청 정보',
                'verbose_name_plural': '영화 OTT 시청 정보 목록',
                'db_table': 'movie_ott_availability',
                'unique_together': {('movie', 'platform')},
            },
        ),
        migrations.CreateModel(
            name='MovieCastMemberModel',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('role_name', models.CharField(blank=True, max_length=100, null=True)),
                ('actor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='filmography', to='movie.personmodel')),
                ('movie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cast_members', to='movie.moviemodel')),
            ],
            options={
                'verbose_name': '영화 출연진',
                'verbose_name_plural': '영화 출연진 목록',
                'db_table': 'movie_cast_members',
                'unique_together': {('movie', 'actor', 'role_name')},
            },
        ),
    ]
